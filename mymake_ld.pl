#!/usr/bin/perl
use strict;
use Cwd;

our %opts;


my $pwd=getcwd();
my $mymake_dir = Cwd::abs_path($0);
$mymake_dir=~s/\/[^\/]+$//;

$opts{prefix} = "$pwd/_inst";
my (@args, %info);
my $lt = "./libtool";
my $opt;
foreach my $a (@ARGV) {
    if ($opt) {
        $opt .= " $a";
    }
    else {
        $opt = $a;
    }

    if ($opt=~/^lt=(.*)/) {
        $lt = $1;
    }
    elsif ($opt=~/^-(o|rpath|version-info)$/) {
        next;
    }
    elsif ($opt=~/^(gcc|mpicc)/) {
        $info{CC}=$opt;
    }
    elsif ($opt=~/^-o (.*)\.la$/) {
        $info{libname} = $1;
    }
    elsif ($opt=~/^-rpath (.*)$/) {
        $info{rpath} = $1;
    }
    elsif ($opt=~/^-version-info (\d+):(\d+):(\d+)$/) {
        my $major = $1 - $3;
        my $minor = $3;
        my $revision = $2;
        $info{so_version} = "$major.$minor.$revision";
        $info{so_name} = "$major";
    }
    else {
        push @args, $opt;
    }

    undef $opt;
}

if ($info{libname} !~ /libmpi/) {
    my $cmd = "$lt --mode=link --quiet";
    $cmd .= " $info{CC}";
    if ($info{libname}) {
        $cmd .= " -o $info{libname}.la";
    }
    if ($info{rpath}) {
        $cmd .= " -rpath $info{rpath}";
    }
    if ($info{so_version}) {
        $cmd .= " -version-info $info{so_version}";
    }
    $cmd .= " " . join(' ', @args);
    system $cmd;
}
else {
    if (-e "mymake/opts") {
        open In, "mymake/opts" or die "Can't open mymake/opts: $!\n";
        while(<In>){
            if (/^(\S+): (.*)/) {
                $opts{$1} = $2;
            }
        }
        close In;
    }
    my $cmd = "$info{CC}";
    my ($libdir, $name1, $name2, $name3);
    if ($info{libname}=~/(.*)\/(\w+)/) {
        $libdir = $1;
        $name1 = "$2.so.$info{so_version}";
        $name2 = "$2.so.$info{so_name}";
        $name3 = "$2.so";
        $cmd .= " -shared";
        $cmd .= " -o $libdir/.libs/$name1";
    }
    foreach my $a (@args) {
        if ($a=~/(.*)\/(\S+)\.lo$/) {
            $cmd .= " $1/.libs/$2.o";
        }
        elsif ($a=~/(.*)\/(\S+)\.la$/) {
            $cmd .= " -Wl,--whole-archive";
            $cmd .= " $1/.libs/$2.a";
            $cmd .= " -Wl,--no-whole-archive";
            open In, "$a" or die "Can't open $a: $!\n";
            while(<In>){
                if (/^dependency_libs='(.*)'/) {
                    $cmd .= $1;
                }
            }
            close In;
        }
        else {
            $cmd .= " $a";
        }
    }

    my $libs;
    $libs = " -lm -lstdc++ -lrt -latomic -lpthread -ldl";
    if ($opts{"with-cuda"}) {
        $libs .= " -L".$opts{"with-cuda"};
        $libs .= " -lcudart -lcuda";
    }
    $cmd .= $libs;

    $cmd .= " -Wl,-soname -Wl,$name2";

    if (!-d "$libdir/.libs") {
        system "mkdir -p $libdir/.libs";
    }
    system $cmd;
    system "ln -sf $name1 $libdir/.libs/$name2";
    system "ln -sf $name1 $libdir/.libs/$name3";

    open Out, ">$info{libname}.la" or die "Can't write $info{libname}.la: $!\n";
    print "  --> [$info{libname}.la]\n";
    print Out "# libmpi.la - a libtool library file\n";
    print Out "# Generated by libtool (GNU libtool) 2.4.6 Debian-2.4.6-14\n";
    print Out "#\n";
    print Out "# Please DO NOT delete this file!\n";
    print Out "# It is necessary for linking the library.\n";
    print Out "\n";
    print Out "# The name that we can dlopen(3).\n";
    print Out "dlname='libmpi.so.0'\n";
    print Out "\n";
    print Out "# Names of this library.\n";
    print Out "library_names='$name1 $name2 $name3'\n";
    print Out "\n";
    print Out "# The name of the static archive.\n";
    print Out "old_library=''\n";
    print Out "\n";
    print Out "# Linker flags that cannot go in dependency_libs.\n";
    print Out "inherited_linker_flags=''\n";
    print Out "\n";
    print Out "# Libraries that this one depends upon.\n";
    print Out "dependency_libs='$libs'\n";
    print Out "\n";
    print Out "# Names of additional weak libraries provided by this library\n";
    print Out "weak_library_names=''\n";
    print Out "\n";
    print Out "# Version information for libmpi.\n";
    print Out "current=0\n";
    print Out "age=0\n";
    print Out "revision=0\n";
    print Out "\n";
    print Out "# Is this an already installed library?\n";
    print Out "installed=no\n";
    print Out "\n";
    print Out "# Should we warn about portability when linking against -modules?\n";
    print Out "shouldnotlink=no\n";
    print Out "\n";
    print Out "# Files to dlopen/dlpreopen\n";
    print Out "dlopen=''\n";
    print Out "dlpreopen=''\n";
    print Out "\n";
    print Out "# Directory that this library needs to be installed in:\n";
    my $cwd = getcwd();
    print Out "libdir='$cwd/_inst/lib'\n";
    print Out "\n";
    close Out;
}
